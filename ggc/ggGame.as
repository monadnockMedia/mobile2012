package com.mobile.ggc {	import flash.net.URLLoader;	import flash.net.URLRequest;	import flash.events.Event;	import flash.system.System;	import flash.events.EventDispatcher;	public class ggGame extends EventDispatcher {		private var ldr:URLLoader = new URLLoader();		public var players:ggPlayers;		public var dealer:ggDealer;		public var _turn:Number =0;		public var currentPlayer:String;				public function set gameFile(s:String):void		{			initialize();			ldr.addEventListener(Event.COMPLETE, cfgLoaded);			ldr.load(new URLRequest(s));		}						public function initialize():void		{			players = new ggPlayers(this);			dealer = new ggDealer();			dealer.addEventListener(DealerEvent.SCORING, relayScore);		}		private function relayScore(d:DealerEvent):void		{									dealer.removeEventListener(DealerEvent.SCORING, relayScore);						dispatchEvent(new GameEvent(GameEvent.SCORE, false, false, d.data));		}				private function cfgLoaded(e:Event):void{			ldr.removeEventListener(Event.COMPLETE, cfgLoaded);			configure(new XML(ldr.data));			ldr=null;		}		public function configure(cfg:XML):void		{			players.addEventListener(PlayerEvent.PLAYERS_BUILT, setRefs);			players.config = new XML(cfg.players);			dealer.config = new XML(cfg.dealer);									System.disposeXML(cfg);			cfg = null;			dispatchEvent(new Event("configComplete", true));		}				private function setRefs(e:Event):void		{			dealer.players = players;			players.dealer = dealer;						players.addEventListener(PlayerEvent.HIT_ME, hitTest);		}				public function hitTest(p:PlayerEvent):void		{			trace("hitTest");		}				public function step():void		{			currentPlayer = dealer.playerList[_turn];			for each (var s:String in dealer.playerList){				var player =  players.thePlayers[s]				player.active = (s == currentPlayer);			}						dealer.addEventListener(DealerEvent.SCORING, endRound);		}				private function endRound(d:DealerEvent):void		{			(_turn == dealer.playerList.length-1) ? _turn = 0 : _turn += 1;			dealer.removeEventListener(DealerEvent.SCORING, endRound);			dispatchEvent(new GameEvent(GameEvent.SCORE, false, false, d.data));			dispatchEvent(new GameEvent(GameEvent.ROUND_END));			//dispatchEvent(d);		}	}	}