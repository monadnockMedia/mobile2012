package com.mobile.ggc {		import flash.system.System;		import flash.events.EventDispatcher;	public dynamic class ggPlayers extends EventDispatcher {		private var active:Number = 0;		public var thePlayers:Object = {};		private var game:ggGame;		public var numPlayers:Number;		public function ggPlayers(g:ggGame) {			// constructor code			game = g;		}				public function playerRef(t:String):basePlayer		{			return thePlayers[t];		}									  		public function set config(cfg:XML){			numPlayers = cfg.@number;						for each (var p:XML in cfg.player){				var cfgObj = new Object;				cfgObj.team =  p.toString();				cfgObj.id = p.@id;				cfgObj.PlayerType =  p.@pType;				cfgObj.gui =  p.@gui;								thePlayers[cfgObj.team] = new ggPlayer(cfgObj); 				//thePlayers[team] =  (type == "human") ? new ggPlayer(id,team) : new ggNPC(id,team);				thePlayers[cfgObj.team].addEventListener(PlayerEvent.HIT_ME, relayEvent);				thePlayers[cfgObj.team].addEventListener(PlayerEvent.VOTE, relayEvent);			}									System.disposeXML(cfg);			cfg = null;						dispatchEvent(new PlayerEvent(PlayerEvent.PLAYERS_BUILT));		}				private function relayEvent(p:PlayerEvent):void		{			trace("Player wants a deal or has case vote");			dispatchEvent(p); //clone event so dealer can see it.		}				public function set dealer(d:ggDealer):void{			for each (var p:ggPlayer in thePlayers){				p.dealer = d;			}		}				public function toObject():Object{			return thePlayers;					}	}	}